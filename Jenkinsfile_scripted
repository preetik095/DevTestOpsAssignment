node {
    // Define tools
    def mavenHome = tool 'Maven'
    def gitHome = tool 'Git'   
    
    try {
        stage('Checkout') {
            echo 'Cloning the git repository'
             git branch: 'master', url: 'https://github.com/preetik095/DevTestOpsAssignment.git'
        }

        stage('Build') {
            echo 'Code build'
            bat "${mavenHome}/bin/mvn clean install"
        }

        stage('Test') {
            echo 'Code test'
            bat "${mavenHome}/bin/mvn test"
        }

        stage('SonarQube Analysis') {
            withSonarQubeEnv('SonarQube_nagp') {
                echo 'Sonarqube analysis started'
                bat "${mavenHome}/bin/mvn sonar:sonar"
            }
        }

        // Uncomment if you want to include the Quality Gate stage
        /*
        stage('Quality Gate') {
            echo 'Quality gate check'
            timeout(time: 10, unit: 'MINUTES') {
                script {
                    try {
                        def qualityGate = waitForQualityGate()
                        if (qualityGate.status != 'OK') {
                            error "Pipeline failed due to SonarQube Quality Gate failure: ${qualityGate.status}"
                        }
                    } catch (Exception e) {
                        error "Error checking SonarQube Quality Gate: ${e.message}"
                    }
                }
            }
        }
        */

        stage('Publish Artifacts to Artifactory') {
            echo 'Uploading artifacts to Artifactory'
            rtMavenDeployer(
                id: 'deployer',
                serverId: '3181417@artifactory',
                releaseRepo: 'nagp.devtestops.assignment',
                snapshotRepo: 'nagp.devtestops.assignment'
            )
            rtMavenRun(
                pom: 'pom.xml',
                goals: 'clean install',
                deployerId: 'deployer'
            )
            rtPublishBuildInfo(
                serverId: '3181417@artifactory'
            )
        }
    } catch (Exception e) {
        echo "Build failed: ${e.message}"
        currentBuild.result = 'FAILURE'
    } finally {
        echo 'Generating TestNG test result'
        junit '**/target/surefire-reports/*.xml'
        if (currentBuild.result == 'SUCCESS') {
            echo 'Build and SonarQube quality gate passed. Artifacts uploaded to Artifactory.'
        } else {
            echo 'Build failed!'
        }
    }
}
